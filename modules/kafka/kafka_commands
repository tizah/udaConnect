Follow the steps below in order to deploy kafka to kubernetes:

1. Install helm from an elevated command shell (admin) using the following command: 
        choco install kubernetes-helm

2. You can also add the helm repo from bitnami with the following command
        helm repo add bitnami https://charts.bitnami.com/bitnami

************************** output ******************************
C:\Users\David\Documents\Udacity Nana Degree\cloud native nano degree\cloud projects\UdaConnect>helm repo add bitnami https://charts.bitnami.com/bitnami
"bitnami" has been added to your repositories
****************************************************************

3. Install kafka with the following command
        helm install kafka-release bitnami/kafka

************************** output ******************************
C:\Users\David\Documents\Udacity Nana Degree\cloud native nano degree\cloud projects\UdaConnect>helm install kafka-release bitnami/kafka
NAME: kafka-release
LAST DEPLOYED: Wed Sep 22 09:45:48 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
** Please be patient while the chart is being deployed **

Kafka can be accessed by consumers via port 9092 on the following DNS name from within your cluster:

    kafka-release.default.svc.cluster.local

Each Kafka broker can be accessed by producers via port 9092 on the following DNS name(s) from within your cluster:

    kafka-release-0.kafka-release-headless.default.svc.cluster.local:9092

To create a pod that you can use as a Kafka client run the following commands:

    kubectl run kafka-release-client --restart='Never' --image docker.io/bitnami/kafka:2.8.0-debian-10-r84 --namespace default --command -- sleep infinity
    kubectl exec --tty -i kafka-release-client --namespace default -- bash

    PRODUCER:
        kafka-console-producer.sh \

            --broker-list kafka-release-0.kafka-release-headless.default.svc.cluster.local:9092 \
            --topic test

    CONSUMER:
        kafka-console-consumer.sh \

            --bootstrap-server kafka-release.default.svc.cluster.local:9092 \
            --topic test \
            --from-beginning
****************************************************************

4. To verify Run the commands bellow
        kubectl get pods

************************** output ******************************
kafka-release-zookeeper-0         0/1     ContainerCreating   0          99s
kafka-release-0                   0/1     ContainerCreating   0          99s


kafka-release-zookeeper-0                  1/1     Running            0          22m
kafka-release-0                            1/1     Running            0          22m

Note: wait for pods to be in Running STATUS
****************************************************************   




************************** output ******************************
****************************************************************